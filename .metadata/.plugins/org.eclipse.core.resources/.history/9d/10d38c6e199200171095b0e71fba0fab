import java.io.*;
import java.net.*;
import java.util.*;

public class VerySimpleChatServer {
    ArrayList clientOutputStreams;

    public class ClientHandler implements Runnable{
        BufferedReader reader;						//переменная reader типа BufferedReader
        Socket sock;								//переменная sock типа Socket

        public ClientHandler(Socket clientSocket){	//метод принимающий поток
            try{
                sock = clientSocket;
                InputStreamReader isReader = new InputStreamReader(sock.getInputStream());//принимаем поток
                reader = new BufferedReader(isReader);
            }catch(Exception ex){
                ex.printStackTrace();
            }
        }//ClientHandler

        public void run(){
            String message;
            try{
                while((message = reader.readLine()) != null){
                    System.out.println("read " + message);
                    tellEveryOne(message);
                }//while
            }catch(Exception ex){
                ex.printStackTrace();
            }
        }//run
    }//ClientHandler

    public static void main(String[] args){
        new VerySimpleChatServer().go();
    }

    public void go(){
        clientOutputStreams = new ArrayList();
        try{
            ServerSocket serverSock = new ServerSocket(5000);

            while(true){
                Socket clientSocket = serverSock.accept();
                PrintWriter writer = new PrintWriter(clientSocket.getOutputStream());
                clientOutputStreams.add(writer);

                Thread t = new Thread(new ClientHandler(clientSocket));
                t.start();
                System.out.println("Got a connection");
            }
        }catch(Exception ex){
            ex.printStackTrace();
        }
    }//go

    public void tellEveryOne(String message){
        Iterator it = clientOutputStreams.iterator();

        while(it.hasNext()){
            try{
                PrintWriter writer = (PrintWriter) it.next();
                writer.println(message);
                writer.flush();
            }catch(Exception ex){
                ex.printStackTrace();
            }
        }//while
    }//tellEveryOne
}
//last change 5/09/17